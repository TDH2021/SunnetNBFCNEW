@model Sunnet_NBFC.Models.clsLeadMain
@using Sunnet_NBFC.App_Code
@using Sunnet_NBFC.Models

@{
    ViewBag.Title = "LeadCredit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Lead Credit Details</h1>
            </div>
            <div class="col-sm-6">
                @*<ol class="breadcrumb float-sm-right">
                        @Html.ActionLink("Back to List", "LeadView", "Lead", new { ShortStage_Name = "CreditApprove" }, null)
                    </ol>*@
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>


@Html.AntiForgeryToken()
@*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@


<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    @using (Html.BeginForm("LeadCredit", "LeadCredit", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="card-body">

                            <div class="form-group">
                                <div class="row">
                                    <div class="col-md-6">

                                        @Html.HiddenFor(model => model.ReqType)
                                        @Html.HiddenFor(model => model.clsLeadCredit.ReqType)
                                        @Html.HiddenFor(model => model.LeadId)
                                        @Html.HiddenFor(model => model.ShortStage_Name)
                                        @Html.HiddenFor(model => model.MainProdId)
                                        @Html.HiddenFor(model => model.ProdId)

                                        @Html.HiddenFor(model => model.clsLeadCredit.LeadId)
                                        @Html.HiddenFor(model => model.clsLeadCredit.CrId, new { @id = "hfCrId" })

                                        @Html.LabelFor(model => model.LeadNo, new { @class = "control-label" }) *
                                        @Html.TextBoxFor(model => model.LeadNo, new { @class = "form-control", @required = "true", @readonly = "true" })
                                        @*@Html.ValidationMessageFor(model => model.LeadId, "", new { @class = "text-danger" })*@
                                    </div>
                                    <div class="col-md-6">
                                        @Html.Label("Product", new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.MainProdName, new { @class = "form-control", @readonly = "true" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="row">

                                    <div class="col-md-3" style="margin-top:3px;">
                                        @Html.CheckBox("chkCIBILVerification", (Model.clsLeadCredit.CIBILVerification ?? "") == "Yes" ? true : false, new { })
                                        <span>@Html.LabelFor(model => model.clsLeadCredit.CIBILVerification, new { @class = "control-label" }) : </span>
                                    </div>

                                    <div class="col-md-3">
                                        <input type="file" name="clsLeadCredit.CibilDocPostedFile" id="CibilDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.CIBILVerification ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                        @Html.HiddenFor(model => model.clsLeadCredit.CibilDoc)
                                        @if (string.IsNullOrEmpty(Model.clsLeadCredit.CibilDoc) == false)
                                        {
                                            @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.CIBILCode, ImageName = Model.clsLeadCredit.CibilDoc }, new { @target = "_blank" })
                                        }

                                    </div>

                                    <div class="col-md-1">
                                        <span>Remark:</span>
                                    </div>

                                    <div class="col-md-5">
                                        @Html.TextBoxFor(model => model.clsLeadCredit.CibilRemarks, @getHtmlAttributes(((Model.clsLeadCredit.CIBILVerification ?? "") == "Yes" ? false : true), "form-control"))
                                    </div>

                                </div>
                            </div>

                            <div class="form-group">
                                <div class="row">

                                    <div class="col-md-3" style="margin-top:3px;">
                                        @Html.CheckBox("chkCAMVerification", (Model.clsLeadCredit.CamVerification ?? "") == "Yes" ? true : false, new { })
                                        <span>@Html.LabelFor(model => model.clsLeadCredit.CamVerification, new { @class = "control-label" }) : </span>
                                    </div>

                                    <div class="col-md-3">
                                        <input type="file" name="clsLeadCredit.CAMDocPostedFile" id="CAMDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.CamVerification ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                        @Html.HiddenFor(model => model.clsLeadCredit.CAMDoc)
                                        @if (string.IsNullOrEmpty(Model.clsLeadCredit.CAMDoc) == false)
                                        {
                                            @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.CAMDoc, ImageName = Model.clsLeadCredit.CAMDoc }, new { @target = "_blank" })
                                        }

                                    </div>

                                    <div class="col-md-1">
                                        <span>Remark:</span>
                                    </div>

                                    <div class="col-md-5">
                                        @Html.TextBoxFor(model => model.clsLeadCredit.CAMRemarks, @getHtmlAttributes(((Model.clsLeadCredit.CamVerification ?? "") == "Yes" ? false : true), "form-control"))
                                    </div>

                                </div>
                            </div>



                            @if (Model.MainProdType == "V" || Model.MainProdType == "T" || Model.MainProdType == "B" || Model.MainProdType == "C")
                            {
                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3" style="margin-top:3px;">
                                            @Html.CheckBox("chkFIVerification", (Model.clsLeadCredit.FIVerification ?? "") == "Yes" ? true : false, new { })
                                            <span>@Html.LabelFor(model => model.clsLeadCredit.FIVerification, new { @class = "control-label" }) : </span>
                                        </div>

                                        <div class="col-md-3">
                                            <input type="file" name="clsLeadCredit.FIDocPostedFile" id="FIDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.FIVerification ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                            @Html.HiddenFor(model => model.clsLeadCredit.FIDoc)
                                            @Html.HiddenFor(model => model.clsLeadCredit.FICode)
                                            @if (string.IsNullOrEmpty(Model.clsLeadCredit.FIDoc) == false)
                                            {
                                                @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.FICode, ImageName = Model.clsLeadCredit.FIDoc }, new { @target = "_blank" })
                                            }

                                        </div>

                                        <div class="col-md-1">
                                            <span>Remark:</span>
                                        </div>

                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.FIRemarks, @getHtmlAttributes(((Model.clsLeadCredit.FIVerification ?? "") == "Yes" ? false : true), "form-control"))
                                        </div>

                                    </div>
                                </div>
                            }

                            @if (Model.MainProdType == "V" || Model.MainProdType == "T" || Model.MainProdType == "B")
                            {

                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3" style="margin-top:3px;">
                                            @Html.CheckBox("chkTVRVerification", (Model.clsLeadCredit.TVRVerification ?? "") == "Yes" ? true : false, new { })
                                            <span>@Html.LabelFor(model => model.clsLeadCredit.TVRVerification, new { @class = "control-label" }) : </span>
                                        </div>

                                        <div class="col-md-3">
                                            <input type="file" name="clsLeadCredit.TVRDocPostedFile" id="TVRDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.TVRVerification ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                            @Html.HiddenFor(model => model.clsLeadCredit.TVRDoc)
                                            @Html.HiddenFor(model => model.clsLeadCredit.TVRCode)
                                            @if (string.IsNullOrEmpty(Model.clsLeadCredit.TVRDoc) == false)
                                            {
                                                @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.TVRCode, ImageName = Model.clsLeadCredit.TVRDoc }, new { @target = "_blank" })
                                            }

                                        </div>

                                        <div class="col-md-1">
                                            <span>Remark:</span>
                                        </div>

                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.TVRRemarks, @getHtmlAttributes(((Model.clsLeadCredit.TVRVerification ?? "") == "Yes" ? false : true), "form-control"))
                                        </div>

                                    </div>
                                </div>

                            }

                            @if (Model.MainProdType == "B")
                            {

                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3" style="margin-top:3px;">
                                            @Html.CheckBox("chkDependentFamilyAssessmentVerification", (Model.clsLeadCredit.DependentFamilyAssessmentVerification ?? "") == "Yes" ? true : false, new { })
                                            <span>@Html.LabelFor(model => model.clsLeadCredit.DependentFamilyAssessmentVerification, new { @class = "control-label" }) : </span>
                                        </div>

                                        <div class="col-md-3">
                                            <input type="file" name="clsLeadCredit.DependentFamilyAssessmentDocPostedFile" id="DependentFamilyAssessmentDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.DependentFamilyAssessmentVerification ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                            @Html.HiddenFor(model => model.clsLeadCredit.DependentFamilyAssessmentDoc)
                                            @*@Html.HiddenFor(model => model.clsLeadCredit.DependentFamilyAssessmentVerificationCode)*@
                                            @if (string.IsNullOrEmpty(Model.clsLeadCredit.DependentFamilyAssessmentDoc) == false)
                                            {
                                                @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.DependentFamilyAssessmentVerification, ImageName = Model.clsLeadCredit.DependentFamilyAssessmentDoc }, new { @target = "_blank" })
                                            }

                                        </div>

                                        <div class="col-md-1">
                                            <span>Remark:</span>
                                        </div>

                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.DependentFamilyAssessmentRemarks, @getHtmlAttributes(((Model.clsLeadCredit.DependentFamilyAssessmentVerification ?? "") == "Yes" ? false : true), "form-control"))
                                        </div>

                                    </div>
                                </div>

                            }

                            @if (Model.MainProdType == "NA")
                            {
                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3" style="margin-top:3px;">
                                            @Html.CheckBox("chkCashFlowVerification", (Model.clsLeadCredit.CashFlowVerification ?? "") == "Yes" ? true : false, new { })
                                            <span>@Html.LabelFor(model => model.clsLeadCredit.CashFlowVerification, new { @class = "control-label" }) : </span>
                                        </div>

                                        <div class="col-md-3">
                                            <input type="file" name="clsLeadCredit.CashFlowDocPostedFile" id="CashFlowDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.CashFlowVerification ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                            @Html.HiddenFor(model => model.clsLeadCredit.CashFlowDoc)
                                            @Html.HiddenFor(model => model.clsLeadCredit.CashFlowCode)
                                            @if (string.IsNullOrEmpty(Model.clsLeadCredit.CashFlowDoc) == false)
                                            {
                                                @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.CashFlowCode, ImageName = Model.clsLeadCredit.CashFlowDoc }, new { @target = "_blank" })
                                            }

                                        </div>

                                        <div class="col-md-1">
                                            <span>Remark:</span>
                                        </div>

                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.CashFlowRemarks, @getHtmlAttributes(((Model.clsLeadCredit.CashFlowVerification ?? "") == "Yes" ? false : true), "form-control"))
                                        </div>

                                    </div>
                                </div>
                            }

                            @if (Model.MainProdName == "V" || Model.MainProdName == "T")
                            {
                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3" style="margin-top:3px;">
                                            @Html.CheckBox("chkViechleValVerfication", (Model.clsLeadCredit.ViechleValVerfication ?? "") == "Yes" ? true : false, new { })
                                            <span>@Html.LabelFor(model => model.clsLeadCredit.ViechleValVerfication, new { @class = "control-label" }) : </span>
                                        </div>

                                        <div class="col-md-3">
                                            <input type="file" name="clsLeadCredit.ViechleDocPostedFile" id="ViechleDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.ViechleValVerfication ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                            @Html.HiddenFor(model => model.clsLeadCredit.ViechleDoc)
                                            @Html.HiddenFor(model => model.clsLeadCredit.ViechleCode)
                                            @if (string.IsNullOrEmpty(Model.clsLeadCredit.ViechleDoc) == false)
                                            {
                                                @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.ViechleCode, ImageName = Model.clsLeadCredit.ViechleDoc }, new { @target = "_blank" })
                                            }

                                        </div>

                                        <div class="col-md-1">
                                            <span>Remark:</span>
                                        </div>

                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.ViechleRemarks, @getHtmlAttributes(((Model.clsLeadCredit.ViechleValVerfication ?? "") == "Yes" ? false : true), "form-control"))
                                        </div>

                                    </div>
                                </div>
                            }

                            @if (Model.MainProdType == "V" || Model.MainProdType == "T" || Model.MainProdType == "B")
                            {
                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3" style="margin-top:3px;">
                                            @Html.CheckBox("chkBankStmtVerification", (Model.clsLeadCredit.BankStmtVerification ?? "") == "Yes" ? true : false, new { })
                                            <span>@Html.LabelFor(model => model.clsLeadCredit.BankStmtVerification, new { @class = "control-label" }) : </span>
                                        </div>

                                        <div class="col-md-3">
                                            <input type="file" name="clsLeadCredit.BankStmtDocPostedFile" id="BankStmtDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.BankStmtVerification ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                            @Html.HiddenFor(model => model.clsLeadCredit.BankStmtDoc)
                                            @Html.HiddenFor(model => model.clsLeadCredit.BankStmtCode)
                                            @if (string.IsNullOrEmpty(Model.clsLeadCredit.BankStmtDoc) == false)
                                            {
                                                @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.BankStmtCode, ImageName = Model.clsLeadCredit.BankStmtDoc }, new { @target = "_blank" })
                                            }

                                        </div>

                                        <div class="col-md-1">
                                            <span>Remark:</span>
                                        </div>

                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.BankStmtRemarks, @getHtmlAttributes(((Model.clsLeadCredit.BankStmtVerification ?? "") == "Yes" ? false : true), "form-control"))
                                        </div>

                                    </div>
                                </div>
                            }


                            @if (Model.MainProdType == "V" || Model.MainProdType == "T" || Model.MainProdType == "B" || Model.MainProdType == "C")
                            {
                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3" style="margin-top:3px;">
                                            @Html.CheckBox("chkIncomeStmtVerification", (Model.clsLeadCredit.IncomeStmtVerification ?? "") == "Yes" ? true : false, new { })
                                            <span>@Html.LabelFor(model => model.clsLeadCredit.IncomeStmtVerification, new { @class = "control-label" }) : </span>
                                        </div>

                                        <div class="col-md-3">
                                            <input type="file" name="clsLeadCredit.IncomeStmtDocPostedFile" id="IncomeStmtDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.IncomeStmtVerification ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                            @Html.HiddenFor(model => model.clsLeadCredit.IncomeStmtDoc)
                                            @Html.HiddenFor(model => model.clsLeadCredit.IncomeStmtCode)
                                            @if (string.IsNullOrEmpty(Model.clsLeadCredit.IncomeStmtDoc) == false)
                                            {
                                                @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.IncomeStmtCode, ImageName = Model.clsLeadCredit.IncomeStmtDoc }, new { @target = "_blank" })
                                            }

                                        </div>

                                        <div class="col-md-1">
                                            <span>Remark:</span>
                                        </div>

                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.IncomeStmtRemarks, @getHtmlAttributes(((Model.clsLeadCredit.IncomeStmtVerification ?? "") == "Yes" ? false : true), "form-control"))
                                        </div>

                                    </div>
                                </div>
                            }

                            @if (Model.MainProdType == "V" || Model.MainProdType == "T" || Model.MainProdType == "B")
                            {

                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3" style="margin-top:3px;">
                                            @Html.CheckBox("chkPersonalDiscussVerification", (Model.clsLeadCredit.PersonalDiscussVerification ?? "") == "Yes" ? true : false, new { })
                                            <span>@Html.LabelFor(model => model.clsLeadCredit.PersonalDiscussVerification, new { @class = "control-label" }) : </span>
                                        </div>

                                        <div class="col-md-3">
                                            <input type="file" name="clsLeadCredit.PersonalDiscussDocPostedFile" id="PersonalDiscussDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.PersonalDiscussVerification ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                            @Html.HiddenFor(model => model.clsLeadCredit.PersonalDiscussDoc)
                                            @Html.HiddenFor(model => model.clsLeadCredit.PersonalDiscussCode)
                                            @if (string.IsNullOrEmpty(Model.clsLeadCredit.PersonalDiscussDoc) == false)
                                            {
                                                @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.PersonalDiscussCode, ImageName = Model.clsLeadCredit.PersonalDiscussDoc }, new { @target = "_blank" })
                                            }

                                        </div>

                                        <div class="col-md-1">
                                            <span>Remark:</span>
                                        </div>

                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.PersonalDiscusssRemarks, @getHtmlAttributes(((Model.clsLeadCredit.PersonalDiscussVerification ?? "") == "Yes" ? false : true), "form-control"))
                                        </div>

                                    </div>
                                </div>

                            }
                            @if (Model.MainProdType == "V" || Model.MainProdType == "T" || Model.MainProdType == "B")
                            {

                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3" style="margin-top:3px;">
                                            @Html.CheckBox("chkEligiblity", (Model.clsLeadCredit.Eligiblity ?? "") == "Yes" ? true : false, new { })
                                            <span>@Html.LabelFor(model => model.clsLeadCredit.Eligiblity, new { @class = "control-label" }) : </span>
                                        </div>

                                        <div class="col-md-3">
                                            <input type="file" name="clsLeadCredit.EligiblityDocPostedFile" id="EligiblityDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.Eligiblity ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                            @Html.HiddenFor(model => model.clsLeadCredit.EligiblityDoc)
                                            @Html.HiddenFor(model => model.clsLeadCredit.EligiblityCode)
                                            @if (string.IsNullOrEmpty(Model.clsLeadCredit.EligiblityDoc) == false)
                                            {
                                                @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.EligiblityCode, ImageName = Model.clsLeadCredit.EligiblityDoc }, new { @target = "_blank" })
                                            }

                                        </div>

                                        <div class="col-md-1">
                                            <span>Remark:</span>
                                        </div>

                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.EligiblityRemarks, @getHtmlAttributes(((Model.clsLeadCredit.Eligiblity ?? "") == "Yes" ? false : true), "form-control"))
                                        </div>

                                    </div>
                                </div>

                            }



                            @if (Model.MainProdType == "V" || Model.MainProdType == "T" || Model.MainProdType == "B")
                            {
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>Occupation:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.Occupation, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>
                            }

                            @if (Model.MainProdType == "B")
                            {
                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3" style="margin-top:3px;">
                                            @Html.CheckBox("chkPropertyDocVerification", (Model.clsLeadCredit.PropertyDocVerification ?? "") == "Yes" ? true : false, new { })
                                            <span>@Html.LabelFor(model => model.clsLeadCredit.PropertyDocVerification, new { @class = "control-label" }) : </span>
                                        </div>

                                        <div class="col-md-3">
                                            <input type="file" name="clsLeadCredit.PropertyDocPostedFile" id="PropertyDocPostedFile" accept="image/png, image/jpg, image/jpeg" @((Model.clsLeadCredit.PropertyDocVerification ?? "") == "Yes" ? "" : "disabled='disabled'") />
                                            @Html.HiddenFor(model => model.clsLeadCredit.PropertyDoc)
                                            @Html.HiddenFor(model => model.clsLeadCredit.PropertyCode)
                                            @if (string.IsNullOrEmpty(Model.clsLeadCredit.PropertyDoc) == false)
                                            {
                                                @Html.ActionLink("Download", "Download", "LeadCredit", new { FileType = Model.clsLeadCredit.PropertyCode, ImageName = Model.clsLeadCredit.PropertyDoc }, new { @target = "_blank" })
                                            }

                                        </div>

                                        <div class="col-md-1">
                                            <span>Remark:</span>
                                        </div>

                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.PropertyDocRemarks, @getHtmlAttributes(((Model.clsLeadCredit.PropertyDocVerification ?? "") == "Yes" ? false : true), "form-control"))
                                        </div>

                                    </div>
                                </div>
                            }


                            @if (Model.MainProdType == "B")
                            {
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>Colletral Type:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.ColletralType, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>PropertyAddress:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.PropertyAddress, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>PropertySize:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.PropertySize, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>LandArea:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.LandArea, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>Dimension:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.Dimension, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>SecurityValue:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.SecurityValue, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>MarketValue:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.MarketValue, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>LandValue:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.LandValue, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>ConstrutionValue:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.ConstrutionValue, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>TotalMarketValue:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.TotalMarketValue, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>LTV:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.LTV, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>RelizableValue:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.RelizableValue, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>PropertyVal:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.PropertyVal, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>PropertyDocuments:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.PropertyDocuments, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>PropertyChain:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.PropertyChain, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>LegalOpinionBy:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.LegalOpinionBy, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>LegalReportDate:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.LegalReportDate, new { @class = "form-control datestyle", placeholder = "dd/mm/yyyy" })
                                            @*@Html.TextBoxFor(model => model.clsLeadCredit.LegalReportDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date" })*@
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>ValuerName:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.ValuerName, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>Valuation:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.Valuation, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>ValueDate:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.ValueDate, new { @class = "form-control datestyle", placeholder = "dd/mm/yyyy" })
                                            @*@Html.TextBoxFor(model => model.clsLeadCredit.ValueDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date" })*@
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>BussinessName:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.BussinessName, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>





                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>BussinessVinatage:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.BussinessVinatage, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>BussinessAddress:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.BussinessAddress, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>BussinessProve:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.BussinessProve, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>



                            }

                            @if (Model.MainProdType == "I")
                            {

                                <div class="form-group">
                                    <div class="row">

                                        <div class="col-md-3">
                                            <span>Credit Check List :</span>
                                        </div>
                                        <div class="col-md-5">

                                            @Html.DropDownListFor(m => m.clsLeadCredit.CreditCheckListID, new SelectList(ViewBag.CrditCheckListDDL, "Value", "Text", Model.clsLeadCredit.CreditCheckListID), "- Select -", new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>Credit Check List Remarks :</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.CreditCheckListRemarks, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>
                            }

                            @if (Model.MainProdType == "V" || Model.MainProdType == "T")
                            {
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>Occupancy :</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.Occupancy, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>
                            }

                            @if (Model.MainProdType == "B")
                            {
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>Proposed Loan Amount & Commercial :</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.ProposedLoanAmountAndCommercial, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>
                            }

                            @if (Model.MainProdType == "V" || Model.MainProdType == "T" || Model.MainProdType == "B")
                            {
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>CAMRemarks:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.CAMRemarks, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>CreditRemarks:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.CreditRemarks, new { @class = "form-control",@id="txtCreditRemarks" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>NegativeRemarks:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.NegativeRemarks, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>

                            }

                            @if (Model.MainProdType == "V" || Model.MainProdType == "T")
                            {

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>VehicleType:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.VehicleType, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>ChassisNo:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.ChassisNo, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>EngineNo:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.EngineNo, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>Insurername:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.Insurername, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>InsurancePolicyNo:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.InsurancePolicyNo, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>PolicyValidity:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.PolicyValidity, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>RCDate:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.RCDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "Date" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>Fitness:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.Fitness, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>




                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>DealerId:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.DropDownListFor(m => m.clsLeadCredit.DealerId, new SelectList(clsCommonData.GetEmoloyeeDDL(), "Value", "Text", Model.clsLeadCredit.DealerId), "- Select -", new { @class = "form-control" })
                                            @*@Html.TextBoxFor(model => model.clsLeadCredit.DealerId, new { @class = "form-control", })*@
                                        </div>
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>RTO:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.RTO, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>Transmission:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.Transmission, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>FuelType:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.FuelType, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <span>CarType:</span>
                                        </div>
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(model => model.clsLeadCredit.CarType, new { @class = "form-control", })
                                        </div>
                                    </div>
                                </div>
                            }

                            <hr />
                            <div class="form-group">
                                <div class="row">

                                    <div class="col-md-6">
                                        @Html.LabelFor(m => m.Status, new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-6">

                                        @*@Html.DropDownListFor(m => m.Status, ViewBag.StatusListDDL, "- Select- ", new { @class = "form-control" })*@
                                        @Html.DropDownListFor(m => m.Status, new SelectList(ViewBag.StatusListDDL, "Value", "Text", Model.Status), "Select", new { @class = "form-control",@id="ddlStatus" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="row">

                                    <div class="col-md-6">
                                        @Html.LabelFor(m => m.Remarks, new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-6">
                                        @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control",@id="txtRemarks" })
                                    </div>
                                </div>
                            </div>




                            <div class="card-footer">
                                <input type="submit" value="Submit" class="btn btn-primary" onclick="return Validation();" />
                                @*@Html.ActionLink("Cancel", "LeadView", "Lead", new { ShortStage_Name = "CreditApprove" }, new { @class = "btn btn-danger btn-large" })*@
                                @Html.ActionLink("Cancel", "GoToStage", "Lead", new { StageName = ViewBag.ComeFrom, ShortStage_Name = "CreditApprove" }, new { @class = "btn btn-danger btn-large" })
                            </div>



                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</section>

@functions {
    object getHtmlAttributes(bool ReadOnly, string CssClass)
    {
        if (ReadOnly)
        {
            //return new { @class = CssClass };
            return new { @class = CssClass, @disabled = "disabled" };
        }
        return new { @class = CssClass };
    }
}

@if (ViewBag.Error != null && ViewBag.Error != "")
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Error");
            };
    </script>
}
@if (ViewBag.Success != null && ViewBag.Success != "")
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Success");
            };
    </script>
}

<script src="~/Scripts/CustomJS/LeadCredit.js"></script>

@*<script>


    $(document).ready(function () {
        //$('.datepicker').datepicker();

        $("#chkCIBILVerification").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_CibilRemarks").removeAttr('disabled')
                    $("#CibilDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_CibilRemarks").attr('disabled', 'disabled')
                    $("#CibilDocPostedFile").attr('disabled', 'disabled')
                }
            });

        $("#chkCAMVerification").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_CAMRemarks").removeAttr('disabled')
                    $("#CAMDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_CAMRemarks").attr('disabled', 'disabled')
                    $("#CAMDocPostedFile").attr('disabled', 'disabled')
                }
            });

        $("#chkFIVerification").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_FIRemarks").removeAttr('disabled')
                    $("#FIDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_FIRemarks").attr('disabled', 'disabled')
                    $("#FIDocPostedFile").attr('disabled', 'disabled')
                }
            });

        $("#chkTVRVerification").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_TVRRemarks").removeAttr('disabled')
                    $("#TVRDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_TVRRemarks").attr('disabled', 'disabled')
                    $("#TVRDocPostedFile").attr('disabled', 'disabled')
                }
            });


        $("#chkDependentFamilyAssessmentVerification").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_DependentFamilyAssessmentRemarks").removeAttr('disabled')
                    $("#DependentFamilyAssessmentDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_DependentFamilyAssessmentRemarks").attr('disabled', 'disabled')
                    $("#DependentFamilyAssessmentDocPostedFile").attr('disabled', 'disabled')
                }
            });


        $("#chkCashFlowVerification").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_CashFlowRemarks").removeAttr('disabled')
                    $("#CashFlowDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_CashFlowRemarks").attr('disabled', 'disabled')
                    $("#CashFlowDocPostedFile").attr('disabled', 'disabled')
                }
            });


        $("#chkViechleValVerfication").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_ViechleRemarks").removeAttr('disabled')
                    $("#ViechleDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_ViechleRemarks").attr('disabled', 'disabled')
                    $("#ViechleDocPostedFile").attr('disabled', 'disabled')
                }
            });


        $("#chkBankStmtVerification").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_BankStmtRemarks").removeAttr('disabled')
                    $("#BankStmtDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_BankStmtRemarks").attr('disabled', 'disabled')
                    $("#BankStmtDocPostedFile").attr('disabled', 'disabled')
                }
            });

        $("#chkIncomeStmtVerification").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_IncomeStmtRemarks").removeAttr('disabled')
                    $("#IncomeStmtDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_IncomeStmtRemarks").attr('disabled', 'disabled')
                    $("#IncomeStmtDocPostedFile").attr('disabled', 'disabled')
                }
            });


        $("#chkPersonalDiscussVerification").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_PersonalDiscusssRemarks").removeAttr('disabled')
                    $("#PersonalDiscussDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_PersonalDiscusssRemarks").attr('disabled', 'disabled')
                    $("#PersonalDiscussDocPostedFile").attr('disabled', 'disabled')
                }
            });

        $("#chkEligiblity").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_EligiblityRemarks").removeAttr('disabled')
                    $("#EligiblityDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_EligiblityRemarks").attr('disabled', 'disabled')
                    $("#EligiblityDocPostedFile").attr('disabled', 'disabled')
                }
            });

        $("#chkPropertyDocVerification").click(
            function () {
                if ($(this).is(":checked")) {
                    $("#clsLeadCredit_PropertyDocRemarks").removeAttr('disabled')
                    $("#PropertyDocPostedFile").removeAttr('disabled')
                } else {
                    $("#clsLeadCredit_PropertyDocRemarks").attr('disabled', 'disabled')
                    $("#PropertyDocPostedFile").attr('disabled', 'disabled')
                }
            });



    });

</script>

<script>
    function Validation() {
        if ($('#chkCIBILVerification').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#CibilDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload CIBIL File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_CibilRemarks").val().trim() == "") {
                swal("TDH", "Please Input CIBIL Remarks.", "error");
                return false;
            }
        }
        if ($('#chkCAMVerification').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#CAMDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload CAM File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_CAMRemarks").val().trim() == "") {
                swal("TDH", "Please Input CAM Remarks", "error");
                return false;
            }
        }

        if ($('#chkFIVerification').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#FIDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload FI Verification File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_FIRemarks").val().trim() == "") {
                swal("TDH", "Please Input FI Remarks", "error");
                return false;
            }
        }

        if ($('#chkTVRVerification').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#TVRDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload TVR File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_TVRRemarks").val().trim() == "") {
                swal("TDH", "Please Input TVR Remarks.", "error");
                return false;
            }
        }

        if ($('#chkDependentFamilyAssessmentVerification').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#DependentFamilyAssessmentDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload Depended Assesment File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_DependentFamilyAssessmentRemarks").val().trim() == "") {
                swal("TDH", "Please Input Depedent Remarks.", "error");
                return false;
            }
        }

        if ($('#chkCashFlowVerification').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#CashFlowDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload Cash Flow File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_CashFlowRemarks").val().trim() == "") {
                swal("TDH", "Please Input Cash Flow Remarks.", "error");
                return false;
            }
        }
        if ($('#chkViechleValVerfication').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#ViechleDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload Viechle File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_ViechleRemarks").val().trim() == "") {
                swal("TDH", "Please Input Viechle Remarks.", "error");
                return false;
            }
        }

        if ($('#chkBankStmtVerification').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#BankStmtDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload Bank Statement File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_BankStmtRemarks").val().trim() == "") {
                swal("TDH", "Please Input Bank Remarks.", "error");
                return false;
            }
        }

        if ($('#chkIncomeStmtVerification').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#IncomeStmtDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload Income Statement File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_IncomeStmtRemarks").val().trim() == "") {
                swal("TDH", "Please Input Income Statement Remarks.", "error");
                return false;
            }
        }

        if ($('#chkPersonalDiscussVerification').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#PersonalDiscussDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload Personal Discussion File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_PersonalDiscusssRemarks").val().trim() == "") {
                swal("TDH", "Please Input Personal Discuss Remarks.", "error");
                return false;
            }
        }

        if ($('#chkEligiblity').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#EligiblityDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload Elegiblity File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_EligiblityRemarks").val().trim() == "") {
                swal("TDH", "Please Input Elgiblity Remarks.", "error");
                return false;
            }
        }

        if ($('#chkPropertyDocVerification').is(":checked") == true) {
            var filedata = new FormData();
            var fileUpload = $("#PropertyDocPostedFile").get(0);
            var files = fileUpload.files;
            debugger;
            if (files.length <= 0) {
                swal("TDH", "Please Upload Property File.", "error");
                return false;
            }
            else if ($("#clsLeadCredit_PropertyDocRemarks").val().trim() == "") {
                swal("TDH", "Please Input Property Remarks.", "error");
                return false;
            }
        }
        if ($("#hfCrId").val() == "0") {
            if ($('#chkCIBILVerification').is(":checked") == false) {
                swal("TDH", "Please Select CIBIL Verification.", "error");
                return false;

            }
            else if ($('#chkCAMVerification').is(":checked") == false) {
                swal("TDH", "Please Select CAM Verification.", "error");
                return false;
            }
        }

        if ($("#ddlStatus :selected").text() == "Select") {
            swal("TDH", "Please Select Status.", "error");
        }
        else {
             if ($("#txtRemarks").val().trim() == "") {
                swal("TDH", "Please Input Remarks Before Submit.", "error");
                return false;
        }
    }
</script>*@


