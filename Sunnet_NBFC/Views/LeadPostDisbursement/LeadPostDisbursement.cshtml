@model Sunnet_NBFC.Models.clsLeadPostDisburse
@using Sunnet_NBFC.App_Code
@using Sunnet_NBFC.Models

@{
	ViewBag.Title = "Post Disbursement";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1>Lead Post Disbursement</h1>
			</div>
			<div class="col-sm-6">
				@*<ol class="breadcrumb float-sm-right">
						@Html.ActionLink("Back to List", "LeadView", "Lead")
					</ol>*@
			</div>
		</div>
	</div><!-- /.container-fluid -->
</section>

@using (Html.BeginForm("LeadPostDisbursement", "LeadPostDisbursement", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })


	<section class="content">
		<div class="container-fluid">
			<div class="row">
				<div class="col-md-12">
					<div class="card">
						<div class="card-body">

							<div class="form-group">
								<div class="row">
									<div class="col-md-12">
										@Html.HiddenFor(model => model.ReqType)
										@Html.HiddenFor(model => model.Id)
										@Html.HiddenFor(model => model.LeadId)
										@Html.HiddenFor(model => model.MainProdId, new { @id = "hdnMainProdId" })
									</div>
								</div>
							</div>


							<div class="form-group">
								<div class="row">

									<div class="col-md-4">
										<label for="exampleInputEmail1">Lead No</label>
										@Html.TextBoxFor(model => model.LeadNo, new { @class = "form-control", @required = "true", @readonly = "true" })

									</div>
									<div class="col-md-4">
										<label for="exampleInputEmail1">Main Product</label>
										@Html.TextBoxFor(model => model.MainProdName, new { @class = "form-control", @required = "true", @readonly = "true" })
									</div>
									<div class="col-md-4">
										<label for="exampleInputEmail1">Product</label>
										@Html.TextBoxFor(model => model.ProdName, new { @class = "form-control", @required = "true", @readonly = "true" })
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<div class="col-md-4">
											<label for="exampleInputEmail1">Customer Name</label>
											@Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", @required = "true", @readonly = "true" })
										</div>
										<div class="col-md-4">
											<label for="exampleInputEmail1">Contact No</label>
											@Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control", @required = "true", @readonly = "true" })
										</div>
										<div class="col-md-4">

										</div>
									</div>
								</div>
								<hr />

								@{ if (Model.MainProdId == 4)
									{

										<div class="row">
											<div class="col-md-3">
												@Html.LabelFor(model => model.DocType, new { @class = "control-label" })
												@Html.DropDownListFor(model => model.DocType, clsMiscDDL.GetMiscDDL("DocumentType"), "Select", new { @class = "form-control", @id = "ddlDocType" })

											</div>
											<div class="col-md-3">
												@Html.LabelFor(model => model.DocDate, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.DocDate, new { @class = "form-control datestyle", @id = "txtDocDate" })
											</div>

											<div class="col-md-3">
												@Html.LabelFor(model => model.PagesFrom, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.PagesFrom, new { @class = "form-control", @id = "txtPagesFrom", @Maxlength = "5", @onkeypress = "return isNumber(this.value);" })
											</div>

											<div class="col-md-3">
												@Html.LabelFor(model => model.PagesTo, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.PagesTo, new { @class = "form-control", @id = "txtPagesTo", @Maxlength = "5", @onkeypress = "return isNumber(this.value);" })
											</div>
										</div>
										<div class="row">

											<div class="col-md-3">
												@Html.LabelFor(model => model.AnyOther, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.AnyOther, new { @class = "form-control", @id = "txtAnyOther" })

											</div>
										</div>
									}
								}

								@{ if (Model.MainProdId == 2 || Model.MainProdId == 3 || Model.MainProdId == 5)
									{
										<div class="row">

											<div class="col-md-3">
												@Html.LabelFor(model => model.RegistrationCertificate, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.RegistrationCertificate, new { @class = "form-control", @id = "txtRegistrationCertificate" })

											</div>
											<div class="col-md-3">
												@Html.LabelFor(model => model.InsuredHPEndorse, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.InsuredHPEndorse, new { @class = "form-control", @id = "txtInsuredHPEndorse" })


											</div>

											<div class="col-md-3">
												@Html.LabelFor(model => model.InvoiceHPEndorse, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.InvoiceHPEndorse, new { @class = "form-control", @id = "txtInvoiceHPEndorse" })

											</div>
											<div class="col-md-3">
												@Html.LabelFor(model => model.MarginMoneyEndorse, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.MarginMoneyEndorse, new { @class = "form-control", @id = "txtMarginMoneyEndorse" })
											</div>

										</div>


										<div class="row">

											<div class="col-md-3">
												@Html.LabelFor(model => model.NOC, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.NOC, new { @class = "form-control", @id = "txtNOC" })
												@*@Html.ValidationMessageFor(model => model.NOC, "", new { @class = "text-danger" })*@

											</div>
											<div class="col-md-3">
												@Html.LabelFor(model => model.RTOSlip, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.RTOSlip, new { @class = "form-control", @id = "txtRTOSlip" })

											</div>
											<div class="col-md-3">
												@Html.LabelFor(model => model.EndorsedRC, new { @class = "control-label" })
												@Html.TextBoxFor(model => model.EndorsedRC, new { @class = "form-control", @id = "txtEndorsedRC" })

											</div>
										</div>
									}
								}

								<div class="card-footer">
									<input type="submit" value="Update" class="btn btn-primary" onclick="return SaveValidation();" />
									@*@Html.ActionLink("Cancel", "LeadView", "LeadDisbursement", null, new { @class = "btn btn-danger btn-large" })*@
									@Html.ActionLink("Cancel", "LeadView", "LeadPostDisbursement", new { @class = "btn btn-danger btn-large" })
								</div>


							</div>

						</div>
					</div>
				</div>
			</div>
		</div>

	</section>

}
<script src="~/Scripts/CustomJS/CommonFunction.js"></script>
<script src="~/Scripts/CustomJS/LeadPostDisburse.js"></script>

@if (ViewBag.Error != null && ViewBag.Error != "")
{
	<script type="text/javascript">

            window.onload = function () {
                //alert("@ViewBag.Error");
				swal("TDH", "@ViewBag.Error", "error");
            };
	</script>
}

@if (ViewBag.Success != null && ViewBag.Success != "")
{
	<script type="text/javascript">
            window.onload = function () {
                //alert("@ViewBag.Success");
				swal("TDH", "@ViewBag.Success", "Success");
            };
	</script>
}

