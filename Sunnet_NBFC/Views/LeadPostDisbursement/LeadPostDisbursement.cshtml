@model Sunnet_NBFC.Models.clsLeadPostDisburse
@using Sunnet_NBFC.App_Code
@using Sunnet_NBFC.Models

@{
	ViewBag.Title = "LeadPostDisbursement";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1>Lead Post Disbursement</h1>
			</div>
			<div class="col-sm-6">
				<ol class="breadcrumb float-sm-right">
					@Html.ActionLink("Back to List", "LeadView", "Lead")
				</ol>
			</div>
		</div>
	</div><!-- /.container-fluid -->
</section>

@using (Html.BeginForm("LeadPostDisbursement", "LeadPostDisbursement", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@*@Html.AntiForgeryToken()
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@


	<section class="content">
		<div class="container-fluid">
			<div class="row">
				<div class="col-md-12">
					<div class="card">
						<div class="card-body">

							<div class="form-group">
								<div class="row">
									<div class="col-md-12">
										@Html.HiddenFor(model => model.ReqType)
										@Html.HiddenFor(model => model.Id)
										@Html.HiddenFor(model => model.LeadId)
									</div>
								</div>
							</div>


							<div class="form-group">
								<div class="row">

									<div class="col-md-4">
										<label for="exampleInputEmail1">Lead No</label>
										@Html.TextBoxFor(model => model.LeadNo, new { @class = "form-control", @required = "true", @readonly = "true" })

									</div>
									<div class="col-md-4">
										<label for="exampleInputEmail1">Main Product</label>
										@Html.TextBoxFor(model => model.MainProdName, new { @class = "form-control", @required = "true", @readonly = "true" })
									</div>
									<div class="col-md-4">
										<label for="exampleInputEmail1">Product</label>
										@Html.TextBoxFor(model => model.ProdName, new { @class = "form-control", @required = "true", @readonly = "true" })
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<div class="col-md-4">
											<label for="exampleInputEmail1">Customer Name</label>
											@Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", @required = "true", @readonly = "true" })
										</div>
										<div class="col-md-4">
											<label for="exampleInputEmail1">Contact No</label>
											@Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control", @required = "true", @readonly = "true" })
										</div>
										<div class="col-md-4">

										</div>
									</div>
								</div>
								<hr />
								<div class="row">
									<div class="col-md-3">
										@Html.LabelFor(model => model.DocType, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.DocType, new { @class = "form-control", @id = "txtDocType" })
									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.DocDate, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.DocDate, new { @class = "form-control date", @id = "txtDocDate" })
									</div>

									<div class="col-md-3">
										@Html.LabelFor(model => model.PagesFrom, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.PagesFrom, new { @class = "form-control", @id = "txtPagesFrom", @Maxlength = "5", @onkeypress = "return isNumber(this.value);" })
									</div>

									<div class="col-md-3">
										@Html.LabelFor(model => model.PagesTo, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.PagesTo, new { @class = "form-control", @id = "txtPagesTo", @Maxlength = "5", @onkeypress = "return isNumber(this.value);" })
									</div>
								</div>
								<div class="row">

									<div class="col-md-3">
										@Html.LabelFor(model => model.AnyOther, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.AnyOther, new { @class = "form-control", @id = "txtAnyOther" })

									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.RegistrationCertificate, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.RegistrationCertificate, new { @class = "form-control", @id = "txtRegistrationCertificate" })

									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.InsuredHPEndorse, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.InsuredHPEndorse, new { @class = "form-control", @id = "txtInsuredHPEndorse" })


									</div>

									<div class="col-md-3">
										@Html.LabelFor(model => model.InvoiceHPEndorse, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.InvoiceHPEndorse, new { @class = "form-control", @id = "txtInvoiceHPEndorse" })

									</div>


								</div>


								<div class="row">
									<div class="col-md-3">
										@Html.LabelFor(model => model.MarginMoneyEndorse, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.MarginMoneyEndorse, new { @class = "form-control", @id = "txtUtrNo" })
									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.NOC, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.NOC, new { @class = "form-control datestyle", @id = "txtLoanStartDate" })
										@*@Html.ValidationMessageFor(model => model.NOC, "", new { @class = "text-danger" })*@

									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.RTOSlip, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.RTOSlip, new { @class = "form-control datestyle", @id = "txtLoanStartDate" })

									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.EndorsedRC, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.EndorsedRC, new { @class = "form-control datestyle", @id = "txtLoanStartDate" })

									</div>
								</div>
								<div class="row">
									<div class="col-md-3">
										@Html.LabelFor(model => model.MarginMoneyEndorse, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.MarginMoneyEndorse, new { @class = "form-control", @id = "txtUtrNo" })
									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.NOC, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.NOC, new { @class = "form-control datestyle", @id = "txtLoanStartDate" })
										@*@Html.ValidationMessageFor(model => model.NOC, "", new { @class = "text-danger" })*@

									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.RTOSlip, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.RTOSlip, new { @class = "form-control datestyle", @id = "txtLoanStartDate" })

									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.EndorsedRC, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.EndorsedRC, new { @class = "form-control datestyle", @id = "txtLoanStartDate" })

									</div>
								</div>


								<div class="card-footer">
									<input type="submit" value="Update" class="btn btn-primary" />
									@*@Html.ActionLink("Cancel", "LeadView", "LeadDisbursement", null, new { @class = "btn btn-danger btn-large" })*@
									@Html.ActionLink("Cancel", "GoToStage", "Lead", new { StageName = ViewBag.ComeFrom }, new { @class = "btn btn-danger btn-large" })
								</div>


							</div>

						</div>
					</div>
				</div>
			</div>
		</div>

	</section>

}
<script src="~/Scripts/CustomJS/CommonFunction.js"></script>
@*<script src="~/plugins/jquery/jquery.min.js"></script>
	<script src="~/plugins/jquery/jquery.validate.min.js"></script>
	<script src="~/plugins/jquery/jquery.validate.unobtrusive.min.js"></script>*@

@if (ViewBag.Error != null && ViewBag.Error != "")
{
	<script type="text/javascript">

            window.onload = function () {
                //alert("@ViewBag.Error");
				swal("TDH", "@ViewBag.Error", "error");
            };
	</script>
}

@if (ViewBag.Success != null && ViewBag.Success != "")
{
	<script type="text/javascript">
            window.onload = function () {
                //alert("@ViewBag.Success");
				swal("TDH", "@ViewBag.Success", "Success");
            };
	</script>
}

<script type="text/javascript">
	function fnCreateEmi() {
		debugger;
		var loan = $('#txtNetDisbursementAmount').val();
		var tenure = $('#txtTenure').val();
		var roi = $('#txtROI').val();
		var startdate = $('#txtLoanStartDate').val();
		//alert(loan);
		//alert(tenure);
		//alert(roi);
		//alert(startdate);

		if (parseFloat(loan) == 0) {
			alert("Please Enter Net Disbursement Amount");
			return false;
		}
		if (parseFloat(roi) == 0) {
			alert("Please Enter Rate Of Interest");
			return false;
		}
		if (parseFloat(tenure) == 0) {
			alert("Please Enter Tenure");
			return false;
		}

		if (startdate == "") {
			alert("Please Enter Loan start date");
			return false;
		}

		var data = { "_loan": loan, "_roi": roi, "_tenure": tenure, "_startdate": startdate };

		$.ajax({
			type: "POST",
			url: "/LeadDisbursement/GetEmijson",
			contentType: "application/json;charset=utf-8",
			data: JSON.stringify(data),
			dataType: "json",
			success: function (result) {
				var aData = JSON.parse(result);
				var fragment = "";
				for (var i = 0; i < aData.length; i++) {
					fragment += "<tr><td> " + aData[i].PERIOD + " </td><td> " + aData[i].PAYDATE + "</td><td> " + aData[i].PAYMENT + "</td><td> " + aData[i].CURRENT_BALANCE + "</td> <td> " + aData[i].INTEREST + "</td><td> " + aData[i].PRINCIPAL + "</td></tr>";
				}
				fragment = fragment != "" ? fragment : "<tr ><td colspan='6'> Sorry ! data not found</td></tr>";

				$("table#tblemi").html("");
				$("table#tblemi").append("<tr><th>Sr. No.</th><th>Emi Date</th><th> Emi Amount</th><th>Current Balance</th><th>Interest</th><th>Principal</th> </tr>");
				$("table#tblemi").append(fragment);
				$("table#tblemi").show();
			}
		});
	}
</script>





