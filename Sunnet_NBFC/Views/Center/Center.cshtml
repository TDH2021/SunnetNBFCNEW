@model Sunnet_NBFC.Models.clsCenter

@{
    ViewBag.Title = "Center";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Center</h1>
            </div>
            @*<div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    @Html.ActionLink("Back to List", "BranchView")
                </ol>
            </div>*@
        </div>
    </div><!-- /.container-fluid -->
</section>

@using (Html.BeginForm("Center", "Center", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-body">

                            <div class="form-group">
                                <div class="row">
                                    <div class="col-md-12">
                                        @Html.HiddenFor(model => model.ReqType)
                                        @Html.HiddenFor(model => model.CenterId)
                                        @Html.HiddenFor(model => model.CompanyID)
                                        @Html.HiddenFor(model => model.IsDelete)

                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="row">


                                    <div class="col-md-6">
                                        @Html.LabelFor(model => model.CenterName, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.CenterName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CenterName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-6">
                                        @Html.LabelFor(model => model.CenterHead, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.CenterHead, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CenterHead, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="row">


                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.MaxNo, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.MaxNo, new { htmlAttributes = new { @class = "form-control", @maxlength = "15" } })
                                            @Html.ValidationMessageFor(model => model.MaxNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>




                                    <div class="card-footer">
                                        @if (Model.CenterId != null && Model.CenterId != 0)
                                        {
                                            <input type="submit" onclick="return Validation();" value="Update" class="btn btn-primary" />
                                        }
                                        else
                                        {
                                            <input type="submit" onclick="return Validation();" value="Save" class="btn btn-primary" />
                                        }
                                        @Html.ActionLink("Cancel", "CenterView", "Center", null, new { @class = "btn btn-danger btn-large" })
                                    </div>


                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>

    </section>

}
<script src="~/Scripts/CustomJS/Branch.js"></script>

@if (ViewBag.Error != null && ViewBag.Error != "")
{
    <script type="text/javascript">

            window.onload = function () {
                swal("TDH","@ViewBag.Error","error");
            };
    </script>
}
@if (ViewBag.Success != null && ViewBag.Success != "")
{
    <script type="text/javascript">

            window.onload = function () {
                swal("TDH","@ViewBag.Success","success");
            };
    </script>
}


@*@if (ViewBag.Success != null && ViewBag.Success != "")
    {
        <script>
            $(function () {
                var Message = '@ViewBag.Success';
                alert(Message);
            });
        </script>
    }*@

