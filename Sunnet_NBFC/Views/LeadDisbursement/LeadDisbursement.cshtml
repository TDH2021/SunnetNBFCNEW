@model Sunnet_NBFC.Models.clsDisbursement
@using Sunnet_NBFC.App_Code
@using Sunnet_NBFC.Models

@{
	ViewBag.Title = "LeadDisbursement";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1>Lead Disbursement</h1>
			</div>
			<div class="col-sm-6">
				<ol class="breadcrumb float-sm-right">
					@Html.ActionLink("Back to List", "LeadView", "Lead")
				</ol>
			</div>
		</div>
	</div><!-- /.container-fluid -->
</section>

@using (Html.BeginForm("LeadDisbursement", "LeadDisbursement", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })


	<section class="content">
		<div class="container-fluid">
			<div class="row">
				<div class="col-md-12">
					<div class="card">
						<div class="card-body">

							<div class="form-group">
								<div class="row">
									<div class="col-md-12">
										@Html.HiddenFor(model => model.ReqType)
										@Html.HiddenFor(model => model.DisbursementId)
										@Html.HiddenFor(model => model.LeadId)
										@Html.HiddenFor(model => model.ShortStage_Name)
									</div>
								</div>
							</div>


							<div class="form-group">
								<div class="row">

									<div class="col-md-4">
										<label for="exampleInputEmail1">Lead No</label>
										@Html.TextBoxFor(model => model.LeadNo, new { @class = "form-control", @required = "true", @readonly = "true" })

									</div>
									<div class="col-md-4">
										<label for="exampleInputEmail1">Main Product</label>
										@Html.TextBoxFor(model => model.MainProdName, new { @class = "form-control", @required = "true", @readonly = "true" })
									</div>
									<div class="col-md-4">
										<label for="exampleInputEmail1">Product</label>
										@Html.TextBoxFor(model => model.ProdName, new { @class = "form-control", @required = "true", @readonly = "true" })
									</div>
								</div>
								<div class="form-group">
									<div class="row">
										<div class="col-md-4">
											<label for="exampleInputEmail1">Customer Name</label>
											@Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", @required = "true", @readonly = "true" })
										</div>
										<div class="col-md-4">
											<label for="exampleInputEmail1">Contact No</label>
											@Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control", @required = "true", @readonly = "true" })
										</div>
										<div class="col-md-4">
											@Html.LabelFor(model => model.ROI, new { @class = "control-label" })
											@*<span style="color:red; font-size:17px; font-weight:bold;">*</span>*@
											@Html.TextBoxFor(model => model.ROI, new { @class = "form-control", @id = "txtROI", @Maxlength = "5", @onkeypress = "return isNumber(this.value);", @required = "true", @readonly = "true" })
											@*@Html.ValidationMessageFor(model => model.ROI, "", new { @class = "text-danger" })*@

										</div>
									</div>
								</div>
								<hr />
								<div class="row">
									<div class="col-md-12">
										<h5> Bank Details</h5>
									</div>
								</div>
								<div class="row">
									<div class="col-md-3">
										@Html.LabelFor(model => model.BeneficiaryName, new { @class = "control-label" }) <span style="color:red; font-size:17px; font-weight:bold;">*</span>
										@Html.TextBoxFor(model => model.BeneficiaryName, new { @class = "form-control", @id = "txtBeneficiaryName", @required = "true" })
										@Html.ValidationMessageFor(model => model.BeneficiaryName, "", new { @class = "text-danger" })
									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.BeneficiaryAccountNo, new { @class = "control-label", @type = "number" }) <span style="color:red; font-size:17px; font-weight:bold;">*</span>
										@Html.TextBoxFor(model => model.BeneficiaryAccountNo, new { @class = "form-control", @required = "true", @id = "txtBeneficiaryAccountNo", @onblur = "return checkConfirmAc()", @onkeypress = "return isNumber(this.value);" })
										@Html.ValidationMessageFor(model => model.BeneficiaryAccountNo, "", new { @class = "text-danger" })
									</div>

									<div class="col-md-3">
										<label>Confirm Account No.</label><span style="color:red; font-size:17px; font-weight:bold;">*</span>
										@Html.TextBoxFor(model => model.BeneficiaryAccountNo, new { @class = "form-control", @id = "txtConfirmAccountNo", @onblur = "return checkConfirmAc()", @onkeypress = "return isNumber(this.value);", @required = "true" })
										@Html.ValidationMessageFor(model => model.BeneficiaryAccountNo, "", new { @class = "text-danger" })
									</div>

									<div class="col-md-3">
										@Html.LabelFor(model => model.IfscCode, new { @class = "control-label" })<span style="color:red; font-size:17px; font-weight:bold;">*</span>
										@Html.TextBoxFor(model => model.IfscCode, new { @class = "form-control", @id = "txtIfscCode", @Maxlength = "11", @required = "true" })
										@Html.ValidationMessageFor(model => model.IfscCode, "", new { @class = "text-danger" })
									</div>
								</div>

								<div class="row">
									<div class="col-md-12">
										&nbsp;
									</div>
								</div>

								<div class="row">
									<div class="col-md-12">
										<h5> Disbursement Details</h5>
									</div>
								</div>
								<div class="row">

									<div class="col-md-3">
										@Html.LabelFor(model => model.NetDisbursementAmount, new { @class = "control-label" })<span style="color:red; font-size:17px; font-weight:bold;">*</span>
										@Html.TextBoxFor(model => model.NetDisbursementAmount, new { @class = "form-control", @id = "txtNetDisbursementAmount", @Maxlength = "12", @onkeypress = "return isNumber(this.value);", @required = "true" })
										@Html.ValidationMessageFor(model => model.NetDisbursementAmount, "", new { @class = "text-danger" })

									</div>
									@*<div class="col-md-3">

										</div>*@
									<div class="col-md-3">
										@Html.LabelFor(model => model.Tenure, new { @class = "control-label" })<span style="color:red; font-size:17px; font-weight:bold;">*</span>
										@Html.TextBoxFor(model => model.Tenure, new { @class = "form-control", @id = "txtTenure", @Maxlength = "3", @onkeypress = "return isNumber(this.value);", @required = "true" })
										@Html.ValidationMessageFor(model => model.Tenure, "", new { @class = "text-danger" })


									</div>

									<div class="col-md-3">
										@Html.LabelFor(model => model.PaymentMode, new { @class = "control-label" })<span style="color:red; font-size:17px; font-weight:bold;">*</span>
										@Html.DropDownListFor(model => model.MiscId, clsMiscDDL.GetMiscDDL("PayMode"), "Select", new { @class = "form-control", @id = "txtPaymentMode" })
										@Html.ValidationMessageFor(model => model.MiscId, "", new { @class = "text-danger" })

									</div>


								</div>


								<div class="row">
									<div class="col-md-3">
										@Html.LabelFor(model => model.UtrNo, new { @class = "control-label" })
										@Html.TextBoxFor(model => model.UtrNo, new { @class = "form-control", @id = "txtUtrNo" })
									</div>
									<div class="col-md-3">
										@Html.LabelFor(model => model.LoanStartDate, new { @class = "control-label" })<span style="color:red; font-size:17px; font-weight:bold;">*</span>
										@Html.TextBoxFor(model => model.LoanStartDate, new { @class = "form-control datestyle", @id = "txtLoanStartDate", @required = "true" })
										@Html.ValidationMessageFor(model => model.LoanStartDate, "", new { @class = "text-danger" })

									</div>
									<div class="col-md-3">
										<label>&nbsp;&nbsp;</label><br />
										<input type="button" class="btn btn-info" value="Create EMI" onclick="fnCreateEmi()" />
										@*@Html.ActionLink("Create EMI", "LeadDisbursement", "LeadDisbursement", FormMethod.Post, new { @class = "btn btn-info btn-large" })*@
									</div>
								</div>
								<div class="row">
									<div class="col-md-12">
										<hr />
									</div>
								</div>

								<div class="row">
									<div class="col-md-12">
										<div class="card">
											<!-- /.card-header -->
											<div class="card-body">
												<label>
													Emi Details
												</label>
												<table id="tblemi" class="table table-bordered table-striped">
													@*</table>
														<table id="example1" class="table table-bordered table-striped">*@
													<thead>
														<tr>
															<th>
																Sr. No.
															</th>
															<th>
																Emi Date
															</th>
															<th>
																Emi Amount
															</th>
															<th>Current Balance</th>
															<th>Interest</th>
															<th>Principal</th>
														</tr>
													</thead>
													<tbody>

														@foreach (var item in ViewBag.EmiList)
														{
															<tr>
																<td>
																	@item.PERIOD
																</td>
																<td>
																	@item.PAYDATE

																</td>
																<td>
																	@item.PAYMENT

																</td>
																<td>
																	@item.CURRENT_BALANCE
																</td>
																<td>
																	@item.INTEREST
																</td>
																<td>
																	@item.PRINCIPAL
																</td>
															</tr>
														}

													</tbody>
												</table>
											</div>
										</div>
									</div>
								</div>
								<div class="card-footer">
									<input type="submit" value="Update" class="btn btn-primary" onclick="ValUpdate()" />
									@*@Html.ActionLink("Cancel", "LeadView", "LeadDisbursement", null, new { @class = "btn btn-danger btn-large" })*@
									@Html.ActionLink("Cancel", "GoToStage", "Lead", new { StageName = ViewBag.ComeFrom }, new { @class = "btn btn-danger btn-large" })
								</div>


							</div>

						</div>
					</div>
				</div>
			</div>
		</div>

	</section>

}
<script src="~/Scripts/CustomJS/CommonFunction.js"></script>

@if (ViewBag.Error != null && ViewBag.Error != "")
{
	<script type="text/javascript">

            window.onload = function () {
                //alert("@ViewBag.Error");
				swal("TDH", "@ViewBag.Error", "error");
            };
	</script>
}

@if (ViewBag.Success != null && ViewBag.Success != "")
{
	<script type="text/javascript">
            window.onload = function () {
                //alert("@ViewBag.Success");
				swal("TDH", "@ViewBag.Success", "Success");
            };
	</script>
}

<script type="text/javascript">

	function checkConfirmAc() {
		var ac = $('#txtBeneficiaryAccountNo').val();
		var conac = $('#txtConfirmAccountNo').val();

		if (ac != "" && conac != "") {
			if (ac != conac) {

				swal("TDH", "Account No. and Confirm Account No. Not Match. Please Check", "error");
				$('#txtConfirmAccountNo').val("");
				return false;
			}
		}

	}

	function ValUpdate() {
		debugger;
		var loan = $('#txtNetDisbursementAmount').val();
		var tenure = $('#txtTenure').val();
		var roi = $('#txtROI').val();
		var startdate = $('#txtLoanStartDate').val();

		if (parseFloat(loan) == 0) {
			//alert("Please Enter Net Disbursement Amount");
			swal("TDH", "Please Enter Net Disbursement Amount", "error");
			return false;
		}
		if (parseFloat(roi) == 0) {
			//alert("Please Enter Rate Of Interest");
			swal("TDH", "Please Enter Rate Of Interest", "error");
			return false;
		}
		if (parseFloat(tenure) == 0) {
			//alert("Please Enter Tenure");
			swal("TDH", "Please Enter Tenure", "error");
			return false;
		}

		if (startdate == "") {
			//alert("Please Enter Loan start date");
			swal("TDH", "PPlease Enter Loan start date", "error");
			return false;
		}
	}


	function fnCreateEmi() {
		debugger;
		var loan = $('#txtNetDisbursementAmount').val();
		var tenure = $('#txtTenure').val();
		var roi = $('#txtROI').val();
		var startdate = $('#txtLoanStartDate').val();
		//alert(loan);
		//alert(tenure);
		//alert(roi);
		//alert(startdate);

		if (parseFloat(loan) == 0) {
			//alert("Please Enter Net Disbursement Amount");
			swal("TDH", "Please Enter Net Disbursement Amount", "error");
			return false;
		}
		if (parseFloat(roi) == 0) {
			//alert("Please Enter Rate Of Interest");
			swal("TDH", "Please Enter Rate Of Interest", "error");
			return false;
		}
		if (parseFloat(tenure) == 0) {
			//alert("Please Enter Tenure");
			swal("TDH", "Please Enter Tenure", "error");
			return false;
		}

		if (startdate == "") {
			//alert("Please Enter Loan start date");
			swal("TDH", "Please Enter Loan start date", "error");
			return false;
		}

		var data = { "_loan": loan, "_roi": roi, "_tenure": tenure, "_startdate": startdate };

		$.ajax({
			type: "POST",
			url: "/LeadDisbursement/GetEmijson",
			contentType: "application/json;charset=utf-8",
			data: JSON.stringify(data),
			dataType: "json",
			success: function (result) {
				var aData = JSON.parse(result);
				var fragment = "";
				for (var i = 0; i < aData.length; i++) {
					fragment += "<tr><td> " + aData[i].PERIOD + " </td><td> " + aData[i].PAYDATE + "</td><td> " + aData[i].PAYMENT + "</td><td> " + aData[i].CURRENT_BALANCE + "</td> <td> " + aData[i].INTEREST + "</td><td> " + aData[i].PRINCIPAL + "</td></tr>";
				}
				fragment = fragment != "" ? fragment : "<tr ><td colspan='6'> Sorry ! data not found</td></tr>";

				$("table#tblemi").html("");
				$("table#tblemi").append("<tr><th>Sr. No.</th><th>Emi Date</th><th> Emi Amount</th><th>Current Balance</th><th>Interest</th><th>Principal</th> </tr>");
				$("table#tblemi").append(fragment);
				$("table#tblemi").show();
			}
		});
	}
</script>





