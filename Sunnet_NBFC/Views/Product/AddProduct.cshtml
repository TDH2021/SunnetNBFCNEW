@model Sunnet_NBFC.Models.clsProduct
@{
	ViewBag.Title = "AddProduct";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1>Add Product</h1>
			</div>
			<div class="col-sm-6">
				<ol class="breadcrumb float-sm-right">
					@*@Html.ActionLink("Back to List", "ProductView")*@
				</ol>
			</div>
		</div>
	</div><!-- /.container-fluid -->
</section>
@using (Html.BeginForm("PostProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()
	<section class="content">
		<div class="container-fluid">
			<div class="row">
				<div class="col-md-12">
					<div class="card">
						<div class="card-body">
							<div class="form-group">
								<div class="row">

									<div class="col-md-6">
										<label for="exampleInputEmail1">Main Product</label>
										@Html.DropDownListFor(model => model.MainProdId, ViewBag.ddlmp as SelectList, new { @class = "form-control" })
										@Html.ValidationMessageFor(model => model.MainProdId, "", new { @class = "text-danger" })


									</div>
									<div class="col-md-6">
										<label for="exampleInputEmail1">Product Name</label>
										@Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", @placeholder = "Enter Product Name", @name = "Product Name", @maxlength = "50", @requried = "true" })
										@Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>
							<div class="form-group">
								<div class="row">
									<div class="col-md-6">
										<label for="exampleInputEmail1">Customer Type</label>
										@{
											var domainsList = new SelectList(new[]
											{
											new SelectListItem { Text = "Guarantor", Value = "g", Selected = true },
											new SelectListItem { Text = "Co-Borrower", Value = "c"},
											new SelectListItem { Text = "Both", Value = "b"},
											new SelectListItem { Text = "None", Value = "n"},
											}, "Value", "Text");
										}
										@Html.DropDownListFor(model => model.CustTypeRequried, domainsList as SelectList, new { @class = "form-control" })
									</div>
									<div class="col-md-6">

									</div>
								</div>
							</div>

							<div class="card-footer">
								<button type="submit" class="btn btn-primary">Submit</button>

							</div>
						</div>
					</div>

				</div>
				<!-- /.row -->
			</div>
		</div>

	</section>

}
<script src="~/plugins/jquery/jquery.min.js"></script>
<script src="~/plugins/jquery/jquery.validate.min.js"></script>
<script src="~/plugins/jquery/jquery.validate.unobtrusive.min.js"></script>

@*@if (ViewBag.Message != null)
	{
		<script type="text/javascript">

				window.onload = function () {
					alert("@ViewBag.Message");
				};
		</script>
	}*@

@if (ViewBag.Error != null && ViewBag.Error != "")
{
	<script type="text/javascript">

            window.onload = function () {
               // alert("@ViewBag.Error");
				swal("TDH", "@ViewBag.Error", "error");

            };
	</script>
}
@if (ViewBag.Success != null && ViewBag.Success != "")
{
	<script type="text/javascript">
            window.onload = function () {
                //alert("@ViewBag.Success");
				swal("TDH", "@ViewBag.Success", "Success");
            };
	</script>
}



